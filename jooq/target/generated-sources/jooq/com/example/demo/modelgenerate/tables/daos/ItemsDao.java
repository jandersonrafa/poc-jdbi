/*
 * This file is generated by jOOQ.
 */
package com.example.demo.modelgenerate.tables.daos;


import com.example.demo.modelgenerate.AbstractSpringDAOImpl;
import com.example.demo.modelgenerate.tables.Items;
import com.example.demo.modelgenerate.tables.records.ItemsRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ItemsDao extends AbstractSpringDAOImpl<ItemsRecord, com.example.demo.modelgenerate.tables.pojos.Items, Long> {

    /**
     * Create a new ItemsDao without any configuration
     */
    public ItemsDao() {
        super(Items.ITEMS, com.example.demo.modelgenerate.tables.pojos.Items.class);
    }

    /**
     * Create a new ItemsDao with an attached configuration
     */
    @Autowired
    public ItemsDao(Configuration configuration) {
        super(Items.ITEMS, com.example.demo.modelgenerate.tables.pojos.Items.class, configuration);
    }

    @Override
    public Long getId(com.example.demo.modelgenerate.tables.pojos.Items object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Items.ITEMS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchById(Long... values) {
        return fetch(Items.ITEMS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.demo.modelgenerate.tables.pojos.Items fetchOneById(Long value) {
        return fetchOne(Items.ITEMS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.demo.modelgenerate.tables.pojos.Items> fetchOptionalById(Long value) {
        return fetchOptional(Items.ITEMS.ID, value);
    }

    /**
     * Fetch records that have <code>orderid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchRangeOfOrderid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Items.ITEMS.ORDERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>orderid IN (values)</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchByOrderid(Long... values) {
        return fetch(Items.ITEMS.ORDERID, values);
    }

    /**
     * Fetch records that have <code>one BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchRangeOfOne(String lowerInclusive, String upperInclusive) {
        return fetchRange(Items.ITEMS.ONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>one IN (values)</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchByOne(String... values) {
        return fetch(Items.ITEMS.ONE, values);
    }

    /**
     * Fetch records that have <code>two BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchRangeOfTwo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Items.ITEMS.TWO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>two IN (values)</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchByTwo(String... values) {
        return fetch(Items.ITEMS.TWO, values);
    }

    /**
     * Fetch records that have <code>tree BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchRangeOfTree(String lowerInclusive, String upperInclusive) {
        return fetchRange(Items.ITEMS.TREE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tree IN (values)</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchByTree(String... values) {
        return fetch(Items.ITEMS.TREE, values);
    }

    /**
     * Fetch records that have <code>four BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchRangeOfFour(String lowerInclusive, String upperInclusive) {
        return fetchRange(Items.ITEMS.FOUR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>four IN (values)</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchByFour(String... values) {
        return fetch(Items.ITEMS.FOUR, values);
    }

    /**
     * Fetch records that have <code>five BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchRangeOfFive(String lowerInclusive, String upperInclusive) {
        return fetchRange(Items.ITEMS.FIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>five IN (values)</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchByFive(String... values) {
        return fetch(Items.ITEMS.FIVE, values);
    }

    /**
     * Fetch records that have <code>six BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchRangeOfSix(String lowerInclusive, String upperInclusive) {
        return fetchRange(Items.ITEMS.SIX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>six IN (values)</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchBySix(String... values) {
        return fetch(Items.ITEMS.SIX, values);
    }

    /**
     * Fetch records that have <code>seven BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchRangeOfSeven(String lowerInclusive, String upperInclusive) {
        return fetchRange(Items.ITEMS.SEVEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>seven IN (values)</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchBySeven(String... values) {
        return fetch(Items.ITEMS.SEVEN, values);
    }

    /**
     * Fetch records that have <code>eight BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchRangeOfEight(String lowerInclusive, String upperInclusive) {
        return fetchRange(Items.ITEMS.EIGHT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>eight IN (values)</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchByEight(String... values) {
        return fetch(Items.ITEMS.EIGHT, values);
    }

    /**
     * Fetch records that have <code>nine BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchRangeOfNine(String lowerInclusive, String upperInclusive) {
        return fetchRange(Items.ITEMS.NINE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nine IN (values)</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchByNine(String... values) {
        return fetch(Items.ITEMS.NINE, values);
    }

    /**
     * Fetch records that have <code>ten BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchRangeOfTen(String lowerInclusive, String upperInclusive) {
        return fetchRange(Items.ITEMS.TEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ten IN (values)</code>
     */
    public List<com.example.demo.modelgenerate.tables.pojos.Items> fetchByTen(String... values) {
        return fetch(Items.ITEMS.TEN, values);
    }
}
